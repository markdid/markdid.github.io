{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./src/components/items-blog.js","webpack:///./src/components/pagination.js"],"names":["BlogList","render","query","this","props","datas","allMarkdownRemark","edges","length","id","className","title","data","pathContext","type","Fragment","React","Component","lang","BlogItem","componentDidMount","color","window","getComputedStyle","textSecondary","getPropertyValue","querySelector","setAttribute","fluid","node","frontmatter","image","childImageSharp","to","fields","slug","aria-label","style","opacity","description","ref","c","date","items","forEach","e","i","remove","push","key","numPages","listItems","currentPage","charAt","toUpperCase","slice"],"mappings":"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","file":"component---src-templates-blog-list-js-a4ec591a0e623919c61c.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport BlogItems from \"../components/items-blog\";\nimport SectionTitle from \"../components/sectiontitle\";\nimport Pagination from \"../components/pagination\";\nimport SEO from \"../components/seo\";\n\nclass BlogList extends React.Component {\n    render() {\n        const query = this.props.datas;\n        if (query.allMarkdownRemark.edges.length > 0) {\n            return (\n                <section id=\"blog\" className=\"container\">\n                    <div className=\"section-title\">\n                        <SectionTitle title=\"BLOG\" />\n                    </div>\n                    <BlogItems data={query} />\n                    <Pagination\n                        pathContext={this.props.pathContext}\n                        type=\"blog\"\n                    />\n                </section>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    }\n}\n\nexport default function({ data, pathContext }) {\n    return (\n        <Layout>\n            <SEO lang=\"en\" title=\"Blog\" />\n            <BlogList datas={data} pathContext={pathContext} />\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query blogListPage($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        date\n                        image {\n                            publicURL\n                            childImageSharp {\n                                fluid(maxWidth: 1920) {\n                                    srcSet\n                                    ...GatsbyImageSharpFluid\n                                }\n                                id\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Date from \"./date\";\nimport { Calendar } from \"./icons\";\nimport \"../style/list-blog.less\";\n\nclass BlogItem extends React.Component {\n    componentDidMount() {\n        this.color = window\n            .getComputedStyle(this.textSecondary, null)\n            .getPropertyValue(\"color\");\n        const calendar = this.textSecondary.querySelector(\"path\");\n        calendar.setAttribute(\"fill\", this.color);\n    }\n\n    render() {\n        return (\n            <div className=\"item col s12 m6\">\n                <div className=\"box\">\n                    <div className=\"image\">\n                        <Img\n                            fluid={\n                                this.props.data.node.frontmatter.image\n                                    .childImageSharp.fluid\n                            }\n                        />\n                        <Link\n                            to={this.props.data.node.fields.slug}\n                            title={this.props.data.node.frontmatter.title}\n                            aria-label={this.props.data.node.frontmatter.title}\n                            className=\"overlay-link\"\n                            style={{ opacity: 0 }}\n                        >\n                            {this.props.data.node.frontmatter.title}\n                        </Link>\n                    </div>\n                    <div className=\"content\">\n                        <h3 className=\"text-primary\">\n                            <Link\n                                to={this.props.data.node.fields.slug}\n                                title={this.props.data.node.frontmatter.title}\n                            >\n                                {this.props.data.node.frontmatter.title}\n                            </Link>\n                        </h3>\n                        <p className=\"text-tertiary\">\n                            {this.props.data.node.frontmatter.description}\n                        </p>\n                        <p\n                            className=\"date text-secondary\"\n                            ref={c => (this.textSecondary = c)}\n                        >\n                            <span className=\"icon\">\n                                <Calendar />\n                            </span>\n                            <Date\n                                data={this.props.data.node.frontmatter.date}\n                            />\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default function(props) {\n    const data = props.data.allMarkdownRemark.edges;\n    let items = [];\n    data.forEach(function(e, i) {\n        if (props.remove && e.node.id === props.remove) return;\n        items.push(<BlogItem key={e.node.id} data={e} />);\n    });\n    return <div className=\"row\">{items}</div>;\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { ChevronLeft, ChevronRight } from \"./icons\";\nimport \"../style/pagination.less\";\n\nexport default function({ pathContext, type }) {\n\n    if (pathContext.numPages > 1) {\n        let listItems = [];\n        for (let i = 1; i <= pathContext.numPages; i++) {\n            listItems.push(\n                <li\n                    className={i === pathContext.currentPage ? \"active\" : \"\"}\n                    key={\"PaginationItem\" + i}\n                >\n                    <Link\n                        to={\"/\" + type + \"/\" + (i === 1 ? \"\" : i)}\n                        title={\n                            type.charAt(0).toUpperCase() +\n                            type.slice(1) +\n                            \" - Page \" +\n                            i\n                        }\n                        key={\"PaginationItemA\" + i}\n                    >\n                        {i}\n                    </Link>\n                </li>\n            );\n        }\n        return (\n            <div className=\"pagination\">\n                <ul>\n                    {pathContext.currentPage !== 1 && (\n                        <li>\n                            <Link\n                                to={\n                                    \"/\" +\n                                    type +\n                                    \"/\" +\n                                    (pathContext.currentPage - 1 === 1\n                                        ? \"\"\n                                        : pathContext.currentPage - 1)\n                                }\n                                title=\"Previous Page\"\n                            >\n                                <span className=\"icon\">\n                                    <ChevronLeft />\n                                </span>\n                            </Link>\n                        </li>\n                    )}\n                    {listItems}\n                    {pathContext.currentPage !== pathContext.numPages && (\n                        <li>\n                            <Link\n                                to={\n                                    \"/\" +\n                                    type +\n                                    \"/\" +\n                                    (pathContext.currentPage + 1)\n                                }\n                                title=\"Next Page\"\n                            >\n                                <span className=\"icon\">\n                                    <ChevronRight />\n                                </span>\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        );\n    } else {\n        return <React.Fragment></React.Fragment>;\n    }\n}\n"],"sourceRoot":""}