{"version":3,"sources":["webpack:///./src/components/blogposts-latest.js","webpack:///./src/templates/blog.js","webpack:///./src/components/items-blog.js"],"names":["props","query","allMarkdownRemark","edges","length","id","className","data","remove","Fragment","lang","title","markdownRemark","frontmatter","description","image","publicURL","banner","fluid","childImageSharp","date","dangerouslySetInnerHTML","__html","html","BlogItem","componentDidMount","this","color","window","getComputedStyle","textSecondary","getPropertyValue","querySelector","setAttribute","render","node","to","fields","slug","aria-label","style","opacity","ref","c","React","Component","items","forEach","e","i","push","key"],"mappings":"kKAIe,WAASA,GACpB,IAAMC,EAAK,OAiCX,OAAIA,EAAMC,kBAAkBC,MAAMC,OAAS,EAEnC,6BAASC,GAAG,mBAAmBC,UAAU,aACrC,yBAAKA,UAAU,iBACX,iDAEJ,kBAAC,IAAD,CAAWC,KAAMN,EAAOO,OAAQR,EAAMK,MAIvC,kBAAC,IAAMI,SAAP,O,yBChDf,sCASe,sBAAoB,IAATF,EAAQ,EAARA,KACtB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIG,KAAK,KACLC,MAAOJ,EAAKK,eAAeC,YAAYF,MACvCG,YAAaP,EAAKK,eAAeC,YAAYC,YAC7CC,MAAOR,EAAKK,eAAeC,YAAYE,MAAMC,YAEjD,yBAAKV,UAAU,aACX,6BAASA,UAAU,aAC4B,MAA1CC,EAAKK,eAAeC,YAAYI,QAC7B,yBAAKX,UAAU,UACX,kBAAC,IAAD,CACIY,MACIX,EAAKK,eAAeC,YAAYI,OAC3BE,gBAAgBD,SAKrC,yBAAKZ,UAAU,qBACX,4BAAKC,EAAKK,eAAeC,YAAYF,OACrC,uBAAGL,UAAU,aACT,kBAAC,IAAD,CAAMC,KAAMA,EAAKK,eAAeC,YAAYO,SAGpD,yBAAKd,UAAU,oBACX,yBACIA,UAAU,kBACVe,wBAAyB,CACrBC,OAAQf,EAAKK,eAAeW,UAK5C,kBAAC,EAAD,CAAalB,GAAIE,EAAKK,eAAeP,QApCtC,IA0CFJ,EAAK,a,2GC5CZuB,E,wLACFC,kBAAA,WACIC,KAAKC,MAAQC,OACRC,iBAAiBH,KAAKI,cAAe,MACrCC,iBAAiB,SACLL,KAAKI,cAAcE,cAAc,QACzCC,aAAa,OAAQP,KAAKC,Q,EAGvCO,OAAA,WAAU,IAAD,OACL,OACI,yBAAK5B,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CACIY,MACIQ,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYE,MAC5BI,gBAAgBD,QAG7B,kBAAC,IAAD,CACIkB,GAAIV,KAAK1B,MAAMO,KAAK4B,KAAKE,OAAOC,KAChC3B,MAAOe,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYF,MACxC4B,aAAYb,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYF,MAC7CL,UAAU,eACVkC,MAAO,CAAEC,QAAS,IAEjBf,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYF,QAG1C,yBAAKL,UAAU,WACX,wBAAIA,UAAU,gBACV,kBAAC,IAAD,CACI8B,GAAIV,KAAK1B,MAAMO,KAAK4B,KAAKE,OAAOC,KAChC3B,MAAOe,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYF,OAEvCe,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYF,QAG1C,uBAAGL,UAAU,iBACRoB,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYC,aAEtC,uBACIR,UAAU,sBACVoC,IAAK,SAAAC,GAAC,OAAK,EAAKb,cAAgBa,IAEhC,0BAAMrC,UAAU,QACZ,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACIC,KAAMmB,KAAK1B,MAAMO,KAAK4B,KAAKtB,YAAYO,Y,GAlDhDwB,IAAMC,WA4Dd,aAAS7C,GACpB,IAAMO,EAAOP,EAAMO,KAAKL,kBAAkBC,MACtC2C,EAAQ,GAKZ,OAJAvC,EAAKwC,SAAQ,SAASC,EAAGC,GACjBjD,EAAMQ,QAAUwC,EAAEb,KAAK9B,KAAOL,EAAMQ,QACxCsC,EAAMI,KAAK,kBAAC1B,EAAD,CAAU2B,IAAKH,EAAEb,KAAK9B,GAAIE,KAAMyC,QAExC,yBAAK1C,UAAU,OAAOwC,K","file":"component---src-templates-blog-js-e0408ca0fc98aeb453b3.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport BlogItems from \"./items-blog\";\n\nexport default function(props) {\n    const query = useStaticQuery(graphql`\n        query latestBlogList {\n            allMarkdownRemark(\n                filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n                limit: 6\n                sort: { fields: [frontmatter___date], order: DESC }\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            description\n                            date\n                            image {\n                                publicURL\n                                childImageSharp {\n                                    fluid(maxWidth: 1920) {\n                                        srcSet\n                                        ...GatsbyImageSharpFluid\n                                    }\n                                    id\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    if (query.allMarkdownRemark.edges.length > 0) {\n        return (\n            <section id=\"latest-blogposts\" className=\"container\">\n                <div className=\"section-title\">\n                    <h2>Latest Blogposts</h2>\n                </div>\n                <BlogItems data={query} remove={props.id} />\n            </section>\n        );\n    } else {\n        return <React.Fragment></React.Fragment>;\n    }\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Layout from \"../components/layout\";\nimport LatestPosts from \"../components/blogposts-latest\";\nimport SEO from \"../components/seo\";\nimport Date from \"../components/date\";\nimport \"../style/blog-singlepage.less\";\n\nexport default function({ data }) {\n    return (\n        <Layout>\n            <SEO\n                lang=\"en\"\n                title={data.markdownRemark.frontmatter.title}\n                description={data.markdownRemark.frontmatter.description}\n                image={data.markdownRemark.frontmatter.image.publicURL}\n            />\n            <div className=\"container\">\n                <article className=\"blog-post\">\n                    {data.markdownRemark.frontmatter.banner != null && (\n                        <div className=\"banner\">\n                            <Img\n                                fluid={\n                                    data.markdownRemark.frontmatter.banner\n                                        .childImageSharp.fluid\n                                }\n                            />\n                        </div>\n                    )}\n                    <div className=\"head text-primary\">\n                        <h1>{data.markdownRemark.frontmatter.title}</h1>\n                        <p className=\"post-date\">\n                            <Date data={data.markdownRemark.frontmatter.date} />\n                        </p>\n                    </div>\n                    <div className=\"content row flex\">\n                        <div\n                            className=\"col s12 m11 l10\"\n                            dangerouslySetInnerHTML={{\n                                __html: data.markdownRemark.html\n                            }}\n                        ></div>\n                    </div>\n                </article>\n                <LatestPosts id={data.markdownRemark.id} />\n            </div>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            id\n            frontmatter {\n                title\n                date\n                description\n                image {\n                    publicURL\n                    childImageSharp {\n                        fluid(maxWidth: 1000) {\n                            srcSet\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n                banner {\n                    publicURL\n                    childImageSharp {\n                        fluid(maxHeight: 600, maxWidth: 1920) {\n                            srcSet\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Date from \"./date\";\nimport { Calendar } from \"./icons\";\nimport \"../style/list-blog.less\";\n\nclass BlogItem extends React.Component {\n    componentDidMount() {\n        this.color = window\n            .getComputedStyle(this.textSecondary, null)\n            .getPropertyValue(\"color\");\n        const calendar = this.textSecondary.querySelector(\"path\");\n        calendar.setAttribute(\"fill\", this.color);\n    }\n\n    render() {\n        return (\n            <div className=\"item col s12 m6\">\n                <div className=\"box\">\n                    <div className=\"image\">\n                        <Img\n                            fluid={\n                                this.props.data.node.frontmatter.image\n                                    .childImageSharp.fluid\n                            }\n                        />\n                        <Link\n                            to={this.props.data.node.fields.slug}\n                            title={this.props.data.node.frontmatter.title}\n                            aria-label={this.props.data.node.frontmatter.title}\n                            className=\"overlay-link\"\n                            style={{ opacity: 0 }}\n                        >\n                            {this.props.data.node.frontmatter.title}\n                        </Link>\n                    </div>\n                    <div className=\"content\">\n                        <h3 className=\"text-primary\">\n                            <Link\n                                to={this.props.data.node.fields.slug}\n                                title={this.props.data.node.frontmatter.title}\n                            >\n                                {this.props.data.node.frontmatter.title}\n                            </Link>\n                        </h3>\n                        <p className=\"text-tertiary\">\n                            {this.props.data.node.frontmatter.description}\n                        </p>\n                        <p\n                            className=\"date text-secondary\"\n                            ref={c => (this.textSecondary = c)}\n                        >\n                            <span className=\"icon\">\n                                <Calendar />\n                            </span>\n                            <Date\n                                data={this.props.data.node.frontmatter.date}\n                            />\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default function(props) {\n    const data = props.data.allMarkdownRemark.edges;\n    let items = [];\n    data.forEach(function(e, i) {\n        if (props.remove && e.node.id === props.remove) return;\n        items.push(<BlogItem key={e.node.id} data={e} />);\n    });\n    return <div className=\"row\">{items}</div>;\n}\n"],"sourceRoot":""}