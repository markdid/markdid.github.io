{"version":3,"sources":["webpack:///./src/components/items-portfolio.js","webpack:///./src/templates/portfolio-list.js","webpack:///./src/components/pagination.js","webpack:///./static/images/icon.png"],"names":["PortfolioItem","render","imgSize","marginRight","marginTop","height","width","className","style","marginBottom","fluid","this","props","data","node","frontmatter","image","childImageSharp","to","fields","slug","title","aria-label","opacity","description","technologies","map","item","index","key","src","alt","React","Component","allMarkdownRemark","edges","items","forEach","e","i","push","id","PortfolioList","query","datas","length","pathContext","type","Fragment","lang","numPages","listItems","currentPage","charAt","toUpperCase","slice","module","exports"],"mappings":"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","file":"component---src-templates-portfolio-list-js-a242348fcabe39b32cd9.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport \"../style/list-portfolio.less\";\r\nimport \"../../static/images/icon.png\"\r\n\r\nclass PortfolioItem extends React.Component {\r\n\r\n    render() {\r\n        const imgSize = {marginRight: \"24px\", marginTop: \"24px\", height: \"48px\", width: \"48px\"}\r\n        return (\r\n            <div className=\"item col s12\" style={{marginBottom: \"0px\"}}>\r\n                <div className=\"row flex\">\r\n                    <div className=\"col m6 image\">\r\n                        <Img\r\n                            fluid={\r\n                                this.props.data.node.frontmatter.image\r\n                                    .childImageSharp.fluid\r\n                            }\r\n                        />\r\n                        <Link\r\n                            to={this.props.data.node.fields.slug}\r\n                            title={this.props.data.node.frontmatter.title}\r\n                            aria-label={this.props.data.node.frontmatter.title}\r\n                            className=\"overlay-link\"\r\n                            style={{ opacity: 0 }}\r\n                        >\r\n                            {this.props.data.node.frontmatter.title}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col m6 content\">\r\n                        <h2 className=\"text-primary pseudo-divider\">\r\n                            <Link\r\n                                to={this.props.data.node.fields.slug}\r\n                                title={this.props.data.node.frontmatter.title}\r\n                                aria-label={\r\n                                    this.props.data.node.frontmatter.title\r\n                                }\r\n                            >\r\n                                {this.props.data.node.frontmatter.title}\r\n                            </Link>\r\n                        </h2>\r\n                        <p className=\"text-tertiary\">\r\n                            {this.props.data.node.frontmatter.description}\r\n                        </p>\r\n                        {/* <p className=\"text-tertiary\">Built with: \r\n                            {this.props.data.node.frontmatter.technologies.map(function(item, index){\r\n                                return <span key={index}> {item}</span>\r\n                            })}\r\n                        </p> */}\r\n\r\n                        <div className=\"text-tertiary\">\r\n                            {this.props.data.node.frontmatter.technologies.map(function(item, index){\r\n                                return <img key={index} src={\"/images/\" + item +\".svg\"} style={imgSize} alt={item}></img>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function(props) {\r\n    const data = props.data.allMarkdownRemark.edges;\r\n    let items = [];\r\n    data.forEach(function(e, i) {\r\n        items.push(<PortfolioItem key={e.node.id} data={e}/>);\r\n    });\r\n    return <div className=\"row\">{items}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport PortfolioItems from \"../components/items-portfolio\";\r\nimport SectionTitle from \"../components/sectiontitle\";\r\nimport Pagination from \"../components/pagination\";\r\nimport SEO from \"../components/seo\";\r\n\r\nclass PortfolioList extends React.Component {\r\n    render() {\r\n        const query = this.props.datas;\r\n        if (query.allMarkdownRemark.edges.length > 0) {\r\n            return (\r\n                <section id=\"portfolio\" className=\"container\">\r\n                    <div className=\"section-title\">\r\n                        <SectionTitle title=\"PORTFOLIO\" />\r\n                    </div>\r\n                    <PortfolioItems data={query} />\r\n                    <Pagination\r\n                        pathContext={this.props.pathContext}\r\n                        type=\"portfolio\"\r\n                    />\r\n                </section>\r\n            );\r\n        } else {\r\n            return <React.Fragment></React.Fragment>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default function({ data, pathContext }) {\r\n    return (\r\n        <Layout>\r\n            <SEO lang=\"en\" title=\"Portfolio\" />\r\n            <PortfolioList datas={data} pathContext={pathContext} />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport const query = graphql`\r\n    query portfolioListPage($skip: Int!, $limit: Int!) {\r\n        allMarkdownRemark(\r\n            filter: { fileAbsolutePath: { regex: \"/portfolio/\" } }\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        description\r\n                        date\r\n                        technologies\r\n                        image {\r\n                            publicURL\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 1920) {\r\n                                    srcSet\r\n                                    ...GatsbyImageSharpFluid\r\n                                }\r\n                                id\r\n                            }\r\n                        }\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { ChevronLeft, ChevronRight } from \"./icons\";\r\nimport \"../style/pagination.less\";\r\n\r\nexport default function({ pathContext, type }) {\r\n\r\n    if (pathContext.numPages > 1) {\r\n        let listItems = [];\r\n        for (let i = 1; i <= pathContext.numPages; i++) {\r\n            listItems.push(\r\n                <li\r\n                    className={i === pathContext.currentPage ? \"active\" : \"\"}\r\n                    key={\"PaginationItem\" + i}\r\n                >\r\n                    <Link\r\n                        to={\"/\" + type + \"/\" + (i === 1 ? \"\" : i)}\r\n                        title={\r\n                            type.charAt(0).toUpperCase() +\r\n                            type.slice(1) +\r\n                            \" - Page \" +\r\n                            i\r\n                        }\r\n                        key={\"PaginationItemA\" + i}\r\n                    >\r\n                        {i}\r\n                    </Link>\r\n                </li>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"pagination\">\r\n                <ul>\r\n                    {pathContext.currentPage !== 1 && (\r\n                        <li>\r\n                            <Link\r\n                                to={\r\n                                    \"/\" +\r\n                                    type +\r\n                                    \"/\" +\r\n                                    (pathContext.currentPage - 1 === 1\r\n                                        ? \"\"\r\n                                        : pathContext.currentPage - 1)\r\n                                }\r\n                                title=\"Previous Page\"\r\n                            >\r\n                                <span className=\"icon\">\r\n                                    <ChevronLeft />\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                    {listItems}\r\n                    {pathContext.currentPage !== pathContext.numPages && (\r\n                        <li>\r\n                            <Link\r\n                                to={\r\n                                    \"/\" +\r\n                                    type +\r\n                                    \"/\" +\r\n                                    (pathContext.currentPage + 1)\r\n                                }\r\n                                title=\"Next Page\"\r\n                            >\r\n                                <span className=\"icon\">\r\n                                    <ChevronRight />\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <React.Fragment></React.Fragment>;\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/icon-fea94c36fb639d3345adff9fae3fc451.png\";"],"sourceRoot":""}