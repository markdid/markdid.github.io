{"version":3,"sources":["webpack:///./src/components/items-portfolio.js","webpack:///./src/templates/portfolio-list.js","webpack:///./src/components/pagination.js","webpack:///./static/images/icon.png"],"names":["PortfolioItem","render","imgSize","marginRight","marginTop","height","width","className","style","marginBottom","fluid","this","props","data","node","frontmatter","image","childImageSharp","to","fields","slug","title","aria-label","opacity","description","technologies","map","item","index","key","src","alt","React","Component","allMarkdownRemark","edges","items","forEach","e","i","push","id","PortfolioList","query","datas","length","pathContext","type","Fragment","lang","numPages","listItems","currentPage","charAt","toUpperCase","slice","module","exports"],"mappings":"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","file":"component---src-templates-portfolio-list-js-65f38109409de2611697.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport \"../style/list-portfolio.less\";\nimport \"../../static/images/icon.png\"\n\nclass PortfolioItem extends React.Component {\n\n    render() {\n        const imgSize = {marginRight: \"24px\", marginTop: \"24px\", height: \"48px\", width: \"48px\"}\n        return (\n            <div className=\"item col s12\" style={{marginBottom: \"0px\"}}>\n                <div className=\"row flex\">\n                    <div className=\"col m6 image\">\n                        <Img\n                            fluid={\n                                this.props.data.node.frontmatter.image\n                                    .childImageSharp.fluid\n                            }\n                        />\n                        <Link\n                            to={this.props.data.node.fields.slug}\n                            title={this.props.data.node.frontmatter.title}\n                            aria-label={this.props.data.node.frontmatter.title}\n                            className=\"overlay-link\"\n                            style={{ opacity: 0 }}\n                        >\n                            {this.props.data.node.frontmatter.title}\n                        </Link>\n                    </div>\n                    <div className=\"col m6 content\">\n                        <h2 className=\"text-primary pseudo-divider\">\n                            <Link\n                                to={this.props.data.node.fields.slug}\n                                title={this.props.data.node.frontmatter.title}\n                                aria-label={\n                                    this.props.data.node.frontmatter.title\n                                }\n                            >\n                                {this.props.data.node.frontmatter.title}\n                            </Link>\n                        </h2>\n                        <p className=\"text-tertiary\">\n                            {this.props.data.node.frontmatter.description}\n                        </p>\n                        {/* <p className=\"text-tertiary\">Built with: \n                            {this.props.data.node.frontmatter.technologies.map(function(item, index){\n                                return <span key={index}> {item}</span>\n                            })}\n                        </p> */}\n\n                        <div className=\"text-tertiary\">\n                            {this.props.data.node.frontmatter.technologies.map(function(item, index){\n                                return <img key={index} src={\"/images/\" + item +\".svg\"} style={imgSize} alt={item}></img>\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default function(props) {\n    const data = props.data.allMarkdownRemark.edges;\n    let items = [];\n    data.forEach(function(e, i) {\n        items.push(<PortfolioItem key={e.node.id} data={e}/>);\n    });\n    return <div className=\"row\">{items}</div>;\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport PortfolioItems from \"../components/items-portfolio\";\nimport SectionTitle from \"../components/sectiontitle\";\nimport Pagination from \"../components/pagination\";\nimport SEO from \"../components/seo\";\n\nclass PortfolioList extends React.Component {\n    render() {\n        const query = this.props.datas;\n        if (query.allMarkdownRemark.edges.length > 0) {\n            return (\n                <section id=\"portfolio\" className=\"container\">\n                    <div className=\"section-title\">\n                        <SectionTitle title=\"PORTFOLIO\" />\n                    </div>\n                    <PortfolioItems data={query} />\n                    <Pagination\n                        pathContext={this.props.pathContext}\n                        type=\"portfolio\"\n                    />\n                </section>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    }\n}\n\nexport default function({ data, pathContext }) {\n    return (\n        <Layout>\n            <SEO lang=\"en\" title=\"Portfolio\" />\n            <PortfolioList datas={data} pathContext={pathContext} />\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query portfolioListPage($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/portfolio/\" } }\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        date\n                        technologies\n                        image {\n                            publicURL\n                            childImageSharp {\n                                fluid(maxWidth: 1920) {\n                                    srcSet\n                                    ...GatsbyImageSharpFluid\n                                }\n                                id\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { ChevronLeft, ChevronRight } from \"./icons\";\nimport \"../style/pagination.less\";\n\nexport default function({ pathContext, type }) {\n\n    if (pathContext.numPages > 1) {\n        let listItems = [];\n        for (let i = 1; i <= pathContext.numPages; i++) {\n            listItems.push(\n                <li\n                    className={i === pathContext.currentPage ? \"active\" : \"\"}\n                    key={\"PaginationItem\" + i}\n                >\n                    <Link\n                        to={\"/\" + type + \"/\" + (i === 1 ? \"\" : i)}\n                        title={\n                            type.charAt(0).toUpperCase() +\n                            type.slice(1) +\n                            \" - Page \" +\n                            i\n                        }\n                        key={\"PaginationItemA\" + i}\n                    >\n                        {i}\n                    </Link>\n                </li>\n            );\n        }\n        return (\n            <div className=\"pagination\">\n                <ul>\n                    {pathContext.currentPage !== 1 && (\n                        <li>\n                            <Link\n                                to={\n                                    \"/\" +\n                                    type +\n                                    \"/\" +\n                                    (pathContext.currentPage - 1 === 1\n                                        ? \"\"\n                                        : pathContext.currentPage - 1)\n                                }\n                                title=\"Previous Page\"\n                            >\n                                <span className=\"icon\">\n                                    <ChevronLeft />\n                                </span>\n                            </Link>\n                        </li>\n                    )}\n                    {listItems}\n                    {pathContext.currentPage !== pathContext.numPages && (\n                        <li>\n                            <Link\n                                to={\n                                    \"/\" +\n                                    type +\n                                    \"/\" +\n                                    (pathContext.currentPage + 1)\n                                }\n                                title=\"Next Page\"\n                            >\n                                <span className=\"icon\">\n                                    <ChevronRight />\n                                </span>\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        );\n    } else {\n        return <React.Fragment></React.Fragment>;\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/icon-fea94c36fb639d3345adff9fae3fc451.png\";"],"sourceRoot":""}