{"version":3,"sources":["webpack:///./src/components/contact.js","webpack:///./src/pages/contact.js"],"names":["Contact","props","state","submitDisabled","textAreaInput","bind","handleSubmit","showContactForm","contact","api_url","event","target","style","height","scrollHeight","preventDefault","this","setState","name","encodeURI","dataName","value","email","dataEmail","message","dataMessage","fetch","method","body","then","res","json","result","resMessage","opacity","response","innerHTML","classList","add","remove","_this","setTimeout","error","componentDidMount","color","window","getComputedStyle","btn","getPropertyValue","querySelector","setAttribute","contactArea","querySelectorAll","forEach","e","i","p","render","id","className","title","ref","c","type","required","overflowY","onChange","onClick","display","description","mail","href","phone","address","whiteSpace","React","Component","query","data","site","siteMetadata","lang","minHeight"],"mappings":"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","file":"component---src-pages-contact-js-379ca5f47f51668e2156.js","sourcesContent":["import React from \"react\";\nimport SectionTitle from \"./sectiontitle\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { PaperPlane, Mapmarker, Mobile, Envelope, Loading } from \"./icons\";\nimport SocialLinks from \"./sociallinks\";\nimport \"../style/contact.less\";\n\nclass Contact extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            submitDisabled: false\n        };\n\n        this.textAreaInput = this.textAreaInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.showContactForm = true;\n\n        if (this.props.contact.api_url === \"\") {\n            this.showContactForm = false;\n        }\n    }\n\n    textAreaInput(event) {\n        event.target.style.height = \"auto\";\n        event.target.style.height = event.target.scrollHeight + \"px\";\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (!this.state.submitDisabled) {\n            this.setState({\n                submitDisabled: true\n            });\n\n            let name = encodeURI(this.dataName.value),\n                email = encodeURI(this.dataEmail.value),\n                message = encodeURI(this.dataMessage.value),\n                body = `name=${name}&email=${email}&message=${message}`;\n\n            fetch(\"http://localhost/local/test.json\", {\n                method: \"post\",\n                body: body\n            })\n                .then(function(res) {\n                    return res.json();\n                })\n                .then(\n                    result => {\n                        this.setState({\n                            submitDisabled: false\n                        });\n                        this.resMessage.style.opacity = 1;\n                        if (result.response === \"error\") {\n                            this.resMessage.innerHTML =\n                                \"There was an error in sending the message\";\n                            this.resMessage.classList.add(\"color-error\");\n                        } else {\n                            this.resMessage.innerHTML =\n                                \"Message sent succesfully\";\n                            this.resMessage.classList.remove(\"color-error\");\n                        }\n                        this.dataName.value = \"\";\n                        this.dataEmail.value = \"\";\n                        this.dataMessage.value = \"\";\n                        let _this = this;\n                        setTimeout(function() {\n                            _this.resMessage.style.opacity = 0;\n                        }, 5000);\n                    },\n                    error => {\n                        this.resMessage.innerHTML = \"Message sent succesfully\";\n                        this.resMessage.classList.remove(\"color-error\");\n                        this.setState({\n                            submitDisabled: false\n                        });\n                        let _this = this;\n                        setTimeout(function() {\n                            _this.resMessage.style.opacity = 0;\n                        }, 5000);\n                    }\n                );\n        }\n    }\n\n    componentDidMount() {\n        if (this.showContactForm) {\n            let color = window\n                .getComputedStyle(this.btn, null)\n                .getPropertyValue(\"color\");\n            this.btn.querySelector(\"path\").setAttribute(\"fill\", color);\n        }\n\n        let li = this.contactArea.querySelectorAll(\".item\");\n\n        li.forEach(function(e, i) {\n            let p = e.querySelector(\"path\");\n            if (p)\n                p.setAttribute(\n                    \"fill\",\n                    window.getComputedStyle(e, null).getPropertyValue(\"color\")\n                );\n        });\n    }\n\n    render() {\n        return (\n            <section id=\"contact\" className=\"container\">\n                <div className=\"section-title\">\n                    <SectionTitle title=\"CONTACT\" />\n                </div>\n                <div\n                    className={\"row\" + (this.showContactForm ? \"\" : \" no-form\")}\n                    ref={c => (this.contactArea = c)}\n                >\n                    {this.showContactForm && (\n                        <div className=\"col s12 m6\">\n                            <form>\n                                <div className=\"field\">\n                                    <label>\n                                        <span className=\"label text-tertiary\">\n                                            Name\n                                        </span>\n                                        <div className=\"input-border\">\n                                            <input\n                                                type=\"text\"\n                                                ref={c => (this.dataName = c)}\n                                                className=\"field-box\"\n                                                name=\"name\"\n                                                id=\"name\"\n                                                required\n                                            />\n                                        </div>\n                                    </label>\n                                </div>\n                                <div className=\"field\">\n                                    <label>\n                                        <span className=\"label text-tertiary\">\n                                            Email\n                                        </span>\n                                        <div className=\"input-border\">\n                                            <input\n                                                type=\"email\"\n                                                ref={c => (this.dataEmail = c)}\n                                                className=\"field-box\"\n                                                name=\"email\"\n                                                id=\"email\"\n                                                required\n                                            />\n                                        </div>\n                                    </label>\n                                </div>\n                                <div className=\"field\">\n                                    <label>\n                                        <span className=\"label text-tertiary\">\n                                            Message\n                                        </span>\n                                        <div className=\"input-border\">\n                                            <textarea\n                                                style={{ overflowY: \"hidden\" }}\n                                                ref={c =>\n                                                    (this.dataMessage = c)\n                                                }\n                                                className=\"field-box\"\n                                                onChange={this.textAreaInput}\n                                                name=\"message\"\n                                                id=\"message\"\n                                                required\n                                            />\n                                        </div>\n                                    </label>\n                                </div>\n                                <div className=\"field\">\n                                    <label className=\"ib\">\n                                        <button\n                                            className={\n                                                \"btn\" +\n                                                (this.state.submitDisabled\n                                                    ? \" disabled\"\n                                                    : \"\")\n                                            }\n                                            onClick={this.handleSubmit}\n                                            id=\"submit\"\n                                            ref={c => (this.btn = c)}\n                                        >\n                                            SEND{\" \"}\n                                            <span\n                                                className=\"icon paper-plane\"\n                                                style={{\n                                                    display: this.state\n                                                        .submitDisabled\n                                                        ? \"none\"\n                                                        : \"inline-block\"\n                                                }}\n                                            >\n                                                <PaperPlane />\n                                            </span>\n                                            <span\n                                                className=\"icon loading\"\n                                                style={{\n                                                    display: !this.state\n                                                        .submitDisabled\n                                                        ? \"none\"\n                                                        : \"inline-block\"\n                                                }}\n                                            >\n                                                <Loading />\n                                            </span>\n                                        </button>\n                                    </label>\n                                    <label>\n                                        <p\n                                            className=\"res-message\"\n                                            ref={c => (this.resMessage = c)}\n                                        ></p>\n                                    </label>\n                                </div>\n                            </form>\n                        </div>\n                    )}\n                    <div\n                        className={\n                            this.showContactForm\n                                ? \"col s12 m6 details\"\n                                : \"col s12 details\"\n                        }\n                    >\n                        {this.props.contact.description && (\n                            <p className=\"text-tertiary\">\n                                {this.props.contact.description}\n                            </p>\n                        )}\n                        <ul>\n                            {this.props.contact.mail && (\n                                <li className=\"text-secondary item\">\n                                    <span className=\"icon\">\n                                        <Envelope />\n                                    </span>\n                                    <a\n                                        href={\n                                            \"mailto:\" + this.props.contact.mail\n                                        }\n                                    >\n                                        {this.props.contact.mail}\n                                    </a>\n                                </li>\n                            )}\n                            {this.props.contact.phone && (\n                                <li className=\"text-secondary item\">\n                                    <span className=\"icon\">\n                                        <Mobile />\n                                    </span>\n                                    <a href={\"tel:\" + this.props.contact.phone}>\n                                        {this.props.contact.phone}\n                                    </a>\n                                </li>\n                            )}\n                            {this.props.contact.address && (\n                                <li\n                                    className=\"text-tertiary item\"\n                                    style={{ whiteSpace: \"pre\" }}\n                                >\n                                    <span className=\"icon\">\n                                        <Mapmarker />\n                                    </span>\n                                    {this.props.contact.address}\n                                </li>\n                            )}\n                            <li>\n                                <SocialLinks />\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default () => (\n    <StaticQuery\n        query={graphql`\n            query {\n                site {\n                    siteMetadata {\n                        contact {\n                            api_url\n                            description\n                            mail\n                            phone\n                            address\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <Contact contact={data.site.siteMetadata.contact} />}\n    />\n);\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Contact from \"../components/contact\";\n\nexport default function () {\n    return (\n        <Layout>\n            <SEO lang=\"en\" title=\"Contact\" />\n            <div style={{ minHeight: \"600px\" }}>\n                <Contact />\n            </div>\n        </Layout>\n    );\n}\n"],"sourceRoot":""}